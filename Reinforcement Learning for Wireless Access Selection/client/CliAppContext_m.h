//
// Generated file, do not edit! Created by opp_msgc 4.1 from applications/ddeclient/CliAppContext.msg.
//

#ifndef _CLIAPPCONTEXT_M_H_
#define _CLIAPPCONTEXT_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>applications/ddeclient/CliAppContext.msg</tt> by opp_msgc.
 * <pre>
 * packet CliAppContext{
 *     int appIndex; 
 *     int appId; 
 *     int portId; 
 *     long playBufferSize;
 *     int playBufferState; 
 *     int userClass; 
 *  }
 * </pre>
 */
class CliAppContext : public ::cPacket
{
  protected:
    int appIndex_var;
    int appId_var;
    int portId_var;
    long playBufferSize_var;
    int playBufferState_var;
    int userClass_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CliAppContext&);

  public:
    CliAppContext(const char *name=NULL, int kind=0);
    CliAppContext(const CliAppContext& other);
    virtual ~CliAppContext();
    CliAppContext& operator=(const CliAppContext& other);
    virtual CliAppContext *dup() const {return new CliAppContext(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getAppIndex() const;
    virtual void setAppIndex(int appIndex_var);
    virtual int getAppId() const;
    virtual void setAppId(int appId_var);
    virtual int getPortId() const;
    virtual void setPortId(int portId_var);
    virtual long getPlayBufferSize() const;
    virtual void setPlayBufferSize(long playBufferSize_var);
    virtual int getPlayBufferState() const;
    virtual void setPlayBufferState(int playBufferState_var);
    virtual int getUserClass() const;
    virtual void setUserClass(int userClass_var);
};

inline void doPacking(cCommBuffer *b, CliAppContext& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, CliAppContext& obj) {obj.parsimUnpack(b);}


#endif // _CLIAPPCONTEXT_M_H_
